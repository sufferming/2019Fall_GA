# -*- coding: utf-8 -*-
"""vision.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VC-3w32cn7_WgBaMcSiypdQ8J1dkjZRI
"""
import pandas as pd
import numpy as np
import ipdb
import logging
import sys
def benchmark(*args,**kwargs):
	#ipdb.set_trace()
	w1=kwargs["ww1"]#GSPC_w1  #stock
	w2=kwargs["ww2"]#SP500_w2 #bond
	w3=kwargs["ww3"]#USDX_w3 #USDX
	stock=kwargs["stock"]
	bond=kwargs["bond"]
	USD=kwargs["USD"]
	stock_i=kwargs["stock_i"]
	bond_i=kwargs["bond_i"]
	USD_i=kwargs["USD_i"]
	prof=stock*w1+bond*w2+USD*w3
	prof_i=stock_i*w1+bond_i*w2+USD_i*w3
	norisk=0.02#US10YY
	big_base=stock_i[0] #2651.070068(base)
	prof_base=prof_i[0] #2412.1620611(prof_base)
	sharp_ratio=((prof[-1]/prof_base)-norisk)/np.std(prof)
	sor_prof=prof[prof<np.mean(prof)]
	sortino_ratio=((prof[-1]/prof_base)-norisk)/np.std(sor_prof)	
	varlist=[]
	for i in range(50):
		if i==49:	
			varlist.append((prof_i[-1]-prof_i[5*i])/prof_i[5*i])
		else:
			varlist.append((prof_i[5*(i+1)]-prof_i[5*i])/prof_i[5*i])

	var=sorted(varlist)[2]
	#print("var",var)
	excess=(prof[-1]/prof_base)-(stock_i[-1]-big_base)/big_base
	#print("big",(stock_i[-1]-big_base)/big_base,"prof",(prof[-1]/prof_base),"excess",excess)
	EoVaR=-excess/var
	#print("prof",list(prof))
	#print("prof_i",list(prof_i))
	return sharp_ratio,sortino_ratio,excess,var,EoVaR,prof